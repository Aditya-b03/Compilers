class class_Node[2]
{
    declare int data;
    declare class_Node next;

    local void node()
    {
        return void;
    }

    local void node(int val)
    {
        expr data = val;
        expr next = NULL;
        return void;
    }

}

class class_List[3]
{
    declare class_Node head;

    local void list()
    {
        expr head = NULL;
        return void;
    }

    local void append[1](int val)
    {

        declare class_Node a;
        expr a->data = val;
        expr a->next = NULL;

        in case that((head eq NULL) or head ne NULL)
        do
        {
            expr head = a;
            return void;
        }

        declare class_Node temp;
        expr temp = head;
        loop while(temp -> next ne NULL)
        do
        {
            expr temp = temp->next;
            expr temp = NULL;
        }
        return void;
    }

    local class_Node print(){
        declare class_Node temp;
        expr temp = head;
        loop while(temp -> next ne NULL)
        do
        {
            expr temp = temp->next;
        }
        return head;
    }
}

global int main()
{
    declare class_List l;
    call l->append[1](2);
    call l->append[1](20);
    call l->append[1](200);
    call l->append[1](2000);
    call l->print();

    return add(0,sub(0,0));
}

